1.测试日常笔记 2017年10月23日13:37:56

饿汉式单例模式
public class MySingleton {  
      
    private static MySingleton instance = new MySingleton();  
      
    private MySingleton(){}  
      
    public static MySingleton getInstance() {  
        return instance;  
    }       
}  
懒汉式 单例模式
public class MySingleton {  
      
    private static MySingleton instance = null;  
      
    private MySingleton(){}  
      
    public static MySingleton getInstance() {  
        if(instance == null){//懒汉式  
            instance = new MySingleton();  
        }  
        return instance;  
    }  
}  
线程安全懒汉式 单例模式
public class MySingleton {  
      
    //使用volatile关键字保其可见性  
    volatile private static MySingleton instance = null;  
      
    private MySingleton(){}  
       
    public static MySingleton getInstance() {  
        try {    
            if(instance != null){//懒汉式   
                  
            }else{  
                //创建实例之前可能会有一些准备性的耗时工作   
                Thread.sleep(300);  
                synchronized (MySingleton.class) {  
                    if(instance == null){//二次检查  
                        instance = new MySingleton();  
                    }  
                }  
            }   
        } catch (InterruptedException e) {   
            e.printStackTrace();  
        }  
        return instance;  
    }  
}  

2.2017年11月8日19:08:37
 闭包是一种特殊的对象。它由两部分构成：函数，以及创建该函数的环境。

3.2017年11月10日14:35:39
            //3.增加短信发送记录(转异步调用)
            bll.AddMessageHistory(clientIp, mobile);
            //3.1 利用委托实现异步写库
            Action<string,string> action = (a, b)=> bll.AddMessageHistory(a, b);
            action.BeginInvoke(clientIp, mobile, null, null);
            //3.2 利用任务实现异步写库
            Task.Run(() => bll.AddMessageHistory(clientIp, mobile));